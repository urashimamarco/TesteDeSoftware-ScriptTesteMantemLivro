package req01MantemLivroTests;
//Generated by Selenium IDE
//MANTEM LIVRO
//REQ01. O sistema deve permitir o cadastro, consulta, edição para alteração e exclusão de livros. O sistema deve rejeitar
//entradas inválidas – entrada válida para ISBN no mínimo 4 e no máximo 4 caracteres, não deve permitir o cadastro de um
//ISBN já cadastrado, entrada válida para autor e título entre 1 e 50 caracteres.

import org.junit.Test;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.JavascriptExecutor;
import java.util.*;

public class REQ01MantemLivro {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;

	@BeforeEach
	public void setUp() {
		System.setProperty("webdriver.chrome.driver", "browserDriver/chromedriver.exe");
		driver = new ChromeDriver();
		driver.get("https://ts-scel-web.herokuapp.com/login");
		driver.manage().window().maximize();
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	} 


	@AfterEach
	public void tearDown() {
		driver.quit();
	}

	@Test
	public void ct01cadastrarlivrocomsucesso() {
	//FAZENDO LOGIN NO SISTEMA
	driver.findElement(By.name("username")).click();
	driver.findElement(By.name("username")).sendKeys("jose");
	driver.findElement(By.name("password")).click();
	driver.findElement(By.name("password")).sendKeys("123");
	driver.findElement(By.cssSelector("button")).click();
	//CARREGANDO
	espera(); 
	//CADASTRAR LIVRO
	driver.findElement(By.linkText("Livros")).click();
	driver.findElement(By.id("isbn")).click();
	driver.findElement(By.id("isbn")).sendKeys("1000");
	driver.findElement(By.id("autor")).click();
	driver.findElement(By.id("autor")).sendKeys("Andrew Tanenbaum");
	driver.findElement(By.id("titulo")).click();
	driver.findElement(By.id("titulo")).sendKeys("Sistemas Operacionais Modernos");
	driver.findElement(By.cssSelector(".btn:nth-child(1)")).click();
	driver.findElement(By.id("paginaConsulta")).click();
	assertThat(driver.findElement(By.id("paginaConsulta")).getText(), is("Lista de livros"));
	
	driver.findElement(By.linkText("Livros")).click();
	driver.findElement(By.id("isbn")).click();
	driver.findElement(By.id("isbn")).sendKeys("3333");
	driver.findElement(By.id("autor")).click();
	driver.findElement(By.id("autor")).sendKeys("Andrew Tanenbaum");
	driver.findElement(By.id("titulo")).click();
	driver.findElement(By.id("titulo")).sendKeys("Redes de computadores");
	driver.findElement(By.cssSelector(".btn:nth-child(1)")).click();
	driver.findElement(By.id("paginaConsulta")).click();
	assertThat(driver.findElement(By.id("paginaConsulta")).getText(), is("Lista de livros"));
	
	driver.findElement(By.linkText("Livros")).click();
	driver.findElement(By.id("isbn")).click();
	driver.findElement(By.id("isbn")).sendKeys("9999");
	driver.findElement(By.id("autor")).click();
	driver.findElement(By.id("autor")).sendKeys("Max Kanat");
	driver.findElement(By.id("titulo")).click();
	driver.findElement(By.id("titulo")).sendKeys("As Leis Fundamentais do Projeto de Software");
	driver.findElement(By.cssSelector(".btn:nth-child(1)")).click();
	driver.findElement(By.id("paginaConsulta")).click();
	assertThat(driver.findElement(By.id("paginaConsulta")).getText(), is("Lista de livros"));
	}

	@Test
	public void ct02ConsultarLivro() {
	//FAZENDO LOGIN NO SISTEMA
	driver.findElement(By.name("username")).click();
	driver.findElement(By.name("username")).sendKeys("jose");
	driver.findElement(By.name("password")).click();
	driver.findElement(By.name("password")).sendKeys("123");
	driver.findElement(By.cssSelector("button")).click();
	//CARREGANDO
	espera(); 
	//CONSULTAR LIVROS POR ISBN
	driver.findElement(By.linkText("Livros")).click();
	driver.findElement(By.id("isbn")).click();
	driver.findElement(By.id("isbn")).sendKeys("1000");
	driver.findElement(By.linkText("Lista de Livros")).click();
	driver.findElement(By.id("paginaConsulta")).click();
	assertThat(driver.findElement(By.id("paginaConsulta")).getText(), is("Lista de livros"));
	
	driver.findElement(By.linkText("Livros")).click();
	driver.findElement(By.id("isbn")).click();
	driver.findElement(By.id("isbn")).sendKeys("3333");
	driver.findElement(By.linkText("Lista de Livros")).click();
	driver.findElement(By.id("paginaConsulta")).click();
	assertThat(driver.findElement(By.id("paginaConsulta")).getText(), is("Lista de livros"));
	
	driver.findElement(By.linkText("Livros")).click();
	driver.findElement(By.id("isbn")).click();
	driver.findElement(By.id("isbn")).sendKeys("9999");
	driver.findElement(By.linkText("Lista de Livros")).click();
	driver.findElement(By.id("paginaConsulta")).click();
	assertThat(driver.findElement(By.id("paginaConsulta")).getText(), is("Lista de livros"));
	}

	@Test
	public void ct03EditarLivro() {
	//FAZENDO LOGIN NO SISTEMA
	driver.findElement(By.name("username")).click();
	driver.findElement(By.name("username")).sendKeys("jose");
	driver.findElement(By.name("password")).click();
	driver.findElement(By.name("password")).sendKeys("123");
	driver.findElement(By.cssSelector("button")).click();
	//CARREGANDO
	espera(); 
	//EDITAR INFORMACOES DE LIVRO
	driver.findElement(By.linkText("Livros")).click();
	driver.findElement(By.linkText("Lista de Livros")).click();
	driver.findElement(By.cssSelector("body")).click();
	assertThat(driver.findElement(By.id("paginaConsulta")).getText(), is("Lista de livros"));
	driver.findElement(By.cssSelector("tr:nth-child(3) .btn-primary")).click();
	driver.findElement(By.id("titulo")).click();
	driver.findElement(By.id("titulo")).click();
	driver.findElement(By.id("titulo")).sendKeys("Redes de Computadores");
	driver.findElement(By.id("isbn")).click();
	driver.findElement(By.id("isbn")).sendKeys("3334");
	driver.findElement(By.cssSelector(".btn")).click();
	driver.findElement(By.cssSelector("body")).click();
	assertThat(driver.findElement(By.id("paginaConsulta")).getText(), is("Lista de livros"));
	}

	@Test
	public void ct04excluirlivrocomsucesso() {
	//FAZENDO LOGIN NO SISTEMA
	driver.findElement(By.name("username")).click();
	driver.findElement(By.name("username")).sendKeys("jose");
	driver.findElement(By.name("password")).click();
	driver.findElement(By.name("password")).sendKeys("123");
	driver.findElement(By.cssSelector("button")).click();
	//CARREGANDO
	espera(); 
	//EXCLUIR LIVRO
	driver.findElement(By.linkText("Livros")).click();
	driver.findElement(By.cssSelector(".my-5")).click();
	assertThat(driver.findElement(By.cssSelector("h3:nth-child(2)")).getText(), is("Cadastrar Livro"));
	driver.findElement(By.linkText("Lista de Livros")).click();
	driver.findElement(By.id("paginaConsulta")).click();
	assertThat(driver.findElement(By.id("paginaConsulta")).getText(), is("Lista de livros"));
	driver.findElement(By.cssSelector("tr:nth-child(3) .delete")).click();
	driver.findElement(By.cssSelector("body")).click();
	assertThat(driver.findElement(By.id("paginaConsulta")).getText(), is("Lista de livros"));
	}

public void espera() {
	try {
		Thread.sleep(2000);
		} catch (InterruptedException e) {
					e.printStackTrace();
		}
}

public String waitForWindow(int timeout) {
	try {
		Thread.sleep(timeout);
		} catch (InterruptedException e) {
					e.printStackTrace();
		}
	Set<String> whNow = driver.getWindowHandles();
	Set<String> whThen = (Set<String>) vars.get("window_handles");
	if (whNow.size() > whThen.size()) {
		whNow.removeAll(whThen);
	}
	return whNow.iterator().next();
}
}



